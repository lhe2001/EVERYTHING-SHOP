<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="maria.ProductDAO">
    <select id="selectProductList" parameterType="ProductSearchDTO" resultType="ProductDTO">
        /* ProductDAO.selectProductList 전체 PRODUCT LIST 조회*/
        <include refid="maria.CommonDAO.pagingTop"></include>
        SELECT ROW_NUMBER() OVER (ORDER BY T01.REGISTER_DT) AS ROW_NUM
             , T01.PRODUCT_NUM          /* 상품번호*/
             , T01.USER_NUM             /* 등록사용자번호*/
             , T01.PRODUCT_NM           /* 상품명*/
             , T01.REGISTER_QUANTITY    /* 수량*/
             , T01.PRODUCT_PRICE        /* 가격*/
             , T01.PRODUCT_STATUS_CD    /* 판매상태*/
             , T01.POST_YN              /* 게시여부*/
             , T01.REGISTER_DT          /* 등록일자*/
             , T01.CHANGE_DT            /* 수정일자*/
          FROM T_PRODUCT T01
        <where>
            <if test="productNm != null and productNm != ''">
                and T01.PRODUCT_NM LIKE CONCAT('%',#{productNm},'%')
            </if>
            <if test="fromPrice != null and fromPrice &gt;= 0 and toPrice == null">
                and T01.PRODUCT_PRICE &gt;= #{fromPrice}  /* 시작가격만 있고 끝 가격은 없을경우*/
            </if>
            <if test="toPrice != null and toPrice &gt;= 0 and fromPrice == null">
                and T01.PRODUCT_PRICE &lt;= #{toPrice}  /* 끝 가격만 있고 시작가격은 없을경우*/
            </if>
            <if test="fromPrice != null and fromPrice &gt;= 0 and toPrice != null and toPrice &gt;= 0">
                and T01.PRODUCT_PRICE BETWEEN #{fromPrice} AND #{toPrice}
            </if>
        </where>
        <include refid="maria.CommonDAO.pagingBottom"></include>
    </select>

    <select id="selectProductListTotalCount" resultType="Integer">
        <include refid="maria.CommonDAO.countTop"></include>
        SELECT ROW_NUMBER() OVER (ORDER BY T01.REGISTER_DT) AS ROW_NUM
             , T01.PRODUCT_NUM          /* 상품번호*/
             , T01.USER_NUM             /* 등록사용자번호*/
             , T01.PRODUCT_NM           /* 상품명*/
             , T01.REGISTER_QUANTITY    /* 수량*/
             , T01.PRODUCT_PRICE        /* 가격*/
             , T01.PRODUCT_STATUS_CD    /* 판매상태*/
             , T01.POST_YN              /* 게시여부*/
             , T01.REGISTER_DT          /* 등록일자*/
             , T01.CHANGE_DT            /* 수정일자*/
          FROM T_PRODUCT T01
          <where>
              <if test="productNm != null and productNm != ''">
                  and T01.PRODUCT_NM LIKE CONCAT('%',#{productNm},'%')
              </if>
              <if test="fromPrice != null and fromPrice &gt;= 0 and toPrice == null">
                  and T01.PRODUCT_PRICE &gt;= #{fromPrice}  /* 시작가격만 있고 끝 가격은 없을경우*/
              </if>
              <if test="toPrice != null and toPrice &gt;= 0 and fromPrice == null">
                  and T01.PRODUCT_PRICE &lt;= #{toPrice}  /* 끝 가격만 있고 시작가격은 없을경우*/
              </if>
              <if test="fromPrice != null and fromPrice &gt;= 0 and toPrice != null and toPrice &gt;= 0">
                  and T01.PRODUCT_PRICE BETWEEN #{fromPrice} AND #{toPrice}
              </if>
          </where>
        <include refid="maria.CommonDAO.countBottom"></include>
    </select>

    <select id="selectByProductNum" parameterType="Integer" resultType="ProductDTO">
        SELECT TPR.PRODUCT_NUM          /* 상품번호*/
             , TPR.USER_NUM             /* 등록사용자번호*/
             , TPR.PRODUCT_NM           /* 상품명*/
             , TPR.REGISTER_QUANTITY    /* 등록수량*/
             , TPR.REMAIN_QUANTITY      /* 잔여수량*/
             , TPR.REGISTER_QUANTITY - TPR.REMAIN_QUANTITY AS SALES_QUANTITY
             , TPR.PRODUCT_PRICE        /* 상품가격*/
             , TPR.PRODUCT_STATUS_CD    /* 판매상태코드[COM1004]*/
             , GET_CODE_NAME('COM1004',TPR.PRODUCT_STATUS_CD) AS PRODUCT_STATUS_NM  /* 판매상태명[COM1004]*/
             , TPR.POST_YN              /* 게시여부*/
             , TPRV.VIEWS 				/* 조회수*/
             , TPR.REGISTER_DT          /* 등록일자*/
             , TPR.CHANGE_DT            /* 수정일자*/
          FROM T_PRODUCT TPR
          JOIN T_PRODUCT_VIEWS TPRV
            ON TPR.PRODUCT_NUM = TPRV.PRODUCT_NUM
        WHERE TPR.PRODUCT_NUM = #{productNum}
    </select>

    <insert id="insertNewProduct" parameterType="ProductRegisterDTO" useGeneratedKeys="true" keyProperty="productNum">
        INSERT INTO T_PRODUCT
        (
            USER_NUM
          , PRODUCT_NM
          , REGISTER_QUANTITY
          , PRODUCT_PRICE
          , PRODUCT_STATUS_CD
          , POST_YN
          , REGISTER_DT
        )
        VALUES
        (
            #{userNum}
          , #{productNm}
          , #{registerQuantity}
          , #{productPrice}
          , #{productStatusCd}
          , nvl(#{postYn}, 'Y')
          , now()
        )
    </insert>

    <update id="updateProduct" parameterType="ProductEditDTO">
        UPDATE T_PRODUCT
           SET PRODUCT_NM = #{productNm}
             , PRODUCT_PRICE = #{productPrice}
             , REGISTER_QUANTITY = #{registerQuantity}
             , PRODUCT_STATUS_CD = #{productStatusCd}
             , POST_YN = #{postYn}
             , CHANGE_DT = now()
         WHERE PRODUCT_NUM = #{productNum}
    </update>

    <insert id="insertOrder" parameterType="productOrderDTO" useGeneratedKeys="true" keyProperty="orderNum">
        INSERT INTO T_ORDER
        (
            USER_NUM
          , ORDER_STATUS_CD
          , REGISTER_DT
        )
        VALUES
        (
            #{userNum}
          , '01'
          , now()
        )
    </insert>

    <insert id="insertOrderedProduct" parameterType="productOrderDTO" useGeneratedKeys="true" keyProperty="orderProductNum">
        INSERT INTO T_ORDERED_PRODUCT
        (
            ORDER_NUM
          , PRODUCT_NUM
          , PRODUCT_PRICE
          , ORDER_QUANTITY
          , DISCOUNT_PRICE
          , FINAL_PAYMENT_PRICE
          , REGISTER_DT
        )
        VALUES
        (
            #{orderNum}
          , #{productNum}
          , #{productPrice}
          , #{orderQuantity}
          , #{discountPrice}
          , #{finalPaymentPrice}
          , now()
        )
    </insert>

    <update id="updateQuantityStts" parameterType="ProductMEntity">
        UPDATE PRODUCT_M
        SET QUANTITY = #{quantity}
        , PRODUCT_STTS = #{productStts}
        <where>
            PRODUCT_NUM = #{productNum}
        </where>
    </update>

    <select id="selectMyOrderList" parameterType="ProductSearchDTO" resultType="ProductOrderDTO">
        SELECT T01.USER_NUM
             , T01.ORDER_NUM
             , T03.PRODUCT_NAME
             , T03.PRODUCT_NUM
             , T03.PRICE
             , T02.QUANTITY AS ORDER_QUANTITY
             , (T02.QUANTITY * T03.PRICE) TOTAL_PRICE
             , TO_CHAR(T01.REGISTER_DT,'YYYY-MM-DD') REGITSTER_DT
             , T01.ORDER_STTS
          FROM ORDER_M T01
          LEFT JOIN ORDER_PRODUCT T02
            ON T01.ORDER_NUM = T02.ORDER_NUM
          LEFT JOIN PRODUCT_M T03
            ON T02.PRODUCT_NUM = T03.PRODUCT_NUM
        <where>
               T01.USER_NUM = #{userNum}
           AND T03.PRODUCT_NAME IS NOT NULL
        <if test="productName != '' and productName != null">
           AND T03.PRODUCT_NAME LIKE '%' || #{productName} || '%'
        </if>
        </where>
    </select>

    <select id="selectRemainingQuantity" parameterType="ProductOrderDTO" resultType="Integer">
        /* ProductDAO.selectOrderQuantity 상품 총 주문수량*/
        SELECT T03.REGISTER_QUANTITY - SUM(T01.ORDER_QUANTITY) AS REMAINING_QUANTITY
          FROM T_ORDERED_PRODUCT T01
          JOIN T_ORDER T02
            ON T01.ORDER_NUM = T02.ORDER_NUM
           AND T02.ORDER_STATUS_CD IN ('01', '03')
          JOIN T_PRODUCT T03
            ON T01.PRODUCT_NUM = T03.PRODUCT_NUM
         WHERE T01.PRODUCT_NUM = #{productNum}
         GROUP BY T01.PRODUCT_NUM
    </select>
    <update id="updateProductSoldOut" parameterType="ProductOrderDTO">
        UPDATE T_PRODUCT
           SET PRODUCT_STATUS_CD = '03'
             , CHANGE_DT = now()
         WHERE PRODUCT_NUM = #{productNum}
    </update>
</mapper>