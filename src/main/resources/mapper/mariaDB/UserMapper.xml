<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="maria.UserDAO">
    <insert id="inserNewUser" parameterType="JoinDTO">
        /* UserDAO.inserNewUser 사용자추가*/
        INSERT INTO T_USER
        (
            USER_ID
          , USER_PW
          , USER_NM
          , REGISTER_DT
          , CHANGE_DT
        )
        VALUES
        (
            #{userId}
          , #{userPw}
          , #{userNm}
          , SYSDATE()
          , SYSDATE()
        )
    </insert>

    <select id="selectUserById" parameterType="String" resultType="User">
        /* UserDAO.selectUserById USER_ID로 사용자 조회*/
        SELECT T01.USER_NUM             /* 사용자번호*/
             , T01.USER_ID              /* 사용자ID*/
             , T01.USER_PW              /* 비밀번호*/
             , T01.ROLE_CD              /* 역할코드[COM1001]*/
             , T01.ACCOUNT_STATUS_CD    /* 계정상태코드[COM1002]*/
             , T01.USER_NM              /* 이름*/
             , T01.HOLDING_POINT        /* 보유포인트*/
             , T01.GRADE_CD             /* 등급코드[COM1003]*/
             , T01.REGISTER_DT          /* 등록일자*/
             , T01.CHANGE_DT            /* 수정일자*/
          FROM T_USER T01
         WHERE T01.USER_ID = #{userId}
    </select>

<!-- TODO 중복 쿼리로 주석처리 사용중인 코드 수정 후 삭제-->

<!--    <insert id="join" parameterType="JoinDTO">-->
<!--        INSERT INTO T_USER-->
<!--        (-->
<!--          USER_ID-->
<!--        , USER_PW-->
<!--        , REGISTER_DT-->
<!--        , CHANGE_DT-->
<!--        , USER_NM-->
<!--        )-->
<!--        VALUES-->
<!--            (-->
<!--              #{userId}-->
<!--            , #{userPw}-->
<!--            , CURRENT_TIMESTAMP-->
<!--            , CURRENT_TIMESTAMP-->
<!--            , #{userNm}-->
<!--            )-->
<!--    </insert>-->

<!--    <select id="findById" parameterType="String" resultType="joinDTO">-->
<!--        SELECT * FROM T_USER-->
<!--        WHERE USER_ID = #{userId}-->
<!--    </select>-->

    <update id="updateUserInfo" parameterType="User">
        /* UserDAO.updateUserInfo USER정보 업데이트*/
        UPDATE T_USER
           SET USER_NM = #{userNm}
             , CHANGE_DT = SYSDATE()
         WHERE USER_ID = #{userId}
    </update>

    <update id="updateHoldingPoint" parameterType="User">
        /* UserDAO.updateHoldingPoint 사용자 보유보인트 업데이트*/
        UPDATE T_USER
        SET HOLDING_POINT = #{holdingPoint}
          , CHANGE_DT = SYSDATE()
        WHERE USER_ID = #{userId}
    </update>

    <insert id="insertPointHistory" parameterType="PointHistory">
        /* UserDAO.insertPointHistory 포인트 이력 추가*/
        INSERT INTO T_POINT_HISTORY
        (
            USER_NUM            /* 사용자번호*/
          , POINT_CHANGE_CD     /* 포인트변동코드[COM1006]*/
          , ADD_POINT           /* 추가포인트*/
          , DEDUCT_POINT        /* 차감포인트*/
          , REGISTER_DT         /* 등록일자*/
        )
        VALUES
        (
            #{userNum}
          , #{pointChangeCd}
          , #{addPoint}
          , #{deductPoint}
          , SYSDATE()
        )
    </insert>
    <select id="selectUsedPoint" parameterType="String" resultType="Integer">
        /* UserDAO.selectUsedPoint 누적포인트 조회*/
        SELECT (T01.DEDUCT_POINT - T01.ADD_POINT) AS USED_POINT			/* 누적포인트*/
          FROM (SELECT T01.USER_NUM
                     , SUM(NVL(T02.ADD_POINT, 0)) AS ADD_POINT			/* 추가포인트*/
                     , SUM(NVL(T02.DEDUCT_POINT, 0))  AS DEDUCT_POINT	/* 차감포인트*/
                     , T02.POINT_CHANGE_CD 								/* 포인트변경코드*/
                  FROM T_USER T01
                  JOIN T_POINT_HISTORY T02
                    ON T01.USER_NUM = T02.USER_NUM
                 WHERE T01.USER_ID = #{userId}
                 GROUP BY T01.USER_NUM, T02.POINT_CHANGE_CD
                HAVING  T02.POINT_CHANGE_CD IN ('03', '04')             /* 03(상품주문), 04(주문취소)*/
               ) T01
        GROUP BY T01.USER_NUM
    </select>

    <select id="selectUserDiscountRate" parameterType="Integer" resultType="Integer">
        /* UserDAO.selectUserDiscountRate 사용자 등급에 해당하는 할인율 조회*/
        SELECT TDIP.DISCOUNT_RATE
          FROM T_USER TUS
          JOIN T_DISCOUNT_POLICY TDIP
            ON TUS.GRADE_CD = TDIP.GRADE_CD
           AND SYSDATE() BETWEEN  TDIP.START_DATE AND TDIP.END_DATE
         WHERE USER_NUM = 1
    </select>
</mapper>